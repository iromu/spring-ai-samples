# syntax=docker/dockerfile-upstream:master-labs
FROM ghcr.io/graalvm/native-image-community:23 AS bootstrap-stage

RUN microdnf install -y freetype-devel; microdnf clean all

COPY ./scripts/health-check.sh /health-check.sh
RUN chmod +x /health-check.sh

FROM bootstrap-stage AS cache-stage

WORKDIR /app

# copy just the pom.xml for cache efficiency
COPY --parents pom.xml **/pom.xml .
COPY mvnw .
COPY .mvn .mvn
# go-offline using the pom.xml
RUN --mount=type=cache,id=m2graal,target=/root/.m2 ./mvnw dependency:go-offline -Dchangelist=-NATIVE -DskipTests=true  --no-transfer-progress --fail-at-end --quiet || echo "mvn error"


FROM cache-stage AS build-stage
# Copy all the source code into the image for building
COPY . .

ARG APP_PATH
ARG NAME

RUN echo "NATIVE BUILD START ${APP_PATH} ${NAME}"

RUN native-image --version
RUN java --version

RUN --mount=type=cache,id=m2graal,target=/root/.m2 ./mvnw package -U --no-transfer-progress --quiet -Pnative -Dchangelist=-NATIVE -DskipTests=true -DspringJavaFormatSkip=true -T 1 -pl :${NAME} -am
RUN echo "NATIVE BUILD DONE ${APP_PATH} ${NAME}"
RUN ls -lah ${APP_PATH}/target/


# 46.71 MB linux/amd64
# 45.46 MB linux/arm64/v8
FROM oraclelinux:9-slim

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
RUN microdnf install -y libgcc
RUN microdnf clean all

ARG APP_PATH
ARG NAME

ENV SPRING_PROFILES_ACTIVE=base,docker
ENV JAVA_OPTS="-Xmx150M"

# Copy the native executable into the containers
COPY --from=build-stage /app/${APP_PATH}/target/${NAME} /app/${NAME}
COPY --from=build-stage /app/${APP_PATH}/target/*.so /app/
COPY --from=bootstrap-stage /health-check.sh /health-check.sh


ENV EXEC_PATH=/app/${NAME}
COPY ./scripts/docker-cmd-run-native.sh /app/run.sh

RUN ls -lah /app
RUN cat /app/run.sh

CMD ["/app/run.sh"]

HEALTHCHECK --interval=10s --timeout=5s --start-period=10s \
  CMD /health-check.sh || exit 1
